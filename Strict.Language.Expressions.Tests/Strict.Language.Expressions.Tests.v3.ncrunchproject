<ProjectConfiguration>
  <Settings>
    <IgnoredTests>
      <FixtureTestSelector>
        <FixtureName>Strict.Language.Expressions.Tests.MutableTests</FixtureName>
      </FixtureTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.TextTests.ParseTextToNumber</TestName>
      </NamedTestSelector>
      <FixtureTestSelector>
        <FixtureName>Strict.Language.Expressions.Tests.ShuntingYardTests</FixtureName>
      </FixtureTestSelector>
      <FixtureTestSelector>
        <FixtureName>Strict.Language.Expressions.Tests.ReturnTests</FixtureName>
      </FixtureTestSelector>
      <FixtureTestSelector>
        <FixtureName>Strict.Language.Expressions.Tests.PhraseTokenizerTests</FixtureName>
      </FixtureTestSelector>
      <FixtureTestSelector>
        <FixtureName>Strict.Language.Expressions.Tests.NumberTests</FixtureName>
      </FixtureTestSelector>
      <FixtureTestSelector>
        <FixtureName>Strict.Language.Expressions.Tests.MethodExpressionParserTests</FixtureName>
      </FixtureTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.UnknownExpressionForArgumentException</TestName>
      </NamedTestSelector>
      <FixtureTestSelector>
        <FixtureName>Strict.Language.Expressions.Tests.MemberCallTests</FixtureName>
      </FixtureTestSelector>
      <FixtureTestSelector>
        <FixtureName>Strict.Language.Expressions.Tests.LogTests</FixtureName>
      </FixtureTestSelector>
      <FixtureTestSelector>
        <FixtureName>Strict.Language.Expressions.Tests.ListTests</FixtureName>
      </FixtureTestSelector>
      <FixtureTestSelector>
        <FixtureName>Strict.Language.Expressions.Tests.IfTests</FixtureName>
      </FixtureTestSelector>
      <FixtureTestSelector>
        <FixtureName>Strict.Language.Expressions.Tests.BooleanTests</FixtureName>
      </FixtureTestSelector>
      <FixtureTestSelector>
        <FixtureName>Strict.Language.Expressions.Tests.BinaryTests</FixtureName>
      </FixtureTestSelector>
      <FixtureTestSelector>
        <FixtureName>Strict.Language.Expressions.Tests.AssignmentTests</FixtureName>
      </FixtureTestSelector>
      <FixtureTestSelector>
        <FixtureName>Strict.Language.Expressions.Tests.BodyTests</FixtureName>
      </FixtureTestSelector>
      <FixtureTestSelector>
        <FixtureName>Strict.Language.Expressions.Tests.ForTests</FixtureName>
      </FixtureTestSelector>
      <FixtureTestSelector>
        <FixtureName>Strict.Language.Expressions.Tests.ListCallTests</FixtureName>
      </FixtureTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.IsMethodPublic</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.TypeImplementsGenericTypeWithLength</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.FromExample("Range(0, 10)")</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.ListTokensAreNotSeparatedByCommaException</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.ParseWithTooManyArguments</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.MutableCanUseChildMethods</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.ParseConstructorCallWithList("ProgramWithPublicMember","texts","has Texts","Dummy","\tconstant instanceWithTexts = ProgramWithPublicMember((\"1\", \"2\", \"3\"))")</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.ParseConstructorCallWithList("ProgramWithHas","numbers","has numbers","Dummy","\tconstant instanceWithNumbers = ProgramWithHas((1, 2, 3))")</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.MethodCallAsMethodParameter</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.TypeCanBeAutoInitialized</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.TypeCannotBeAutoInitialized</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.MakeSureMutableTypeMethodsAreNotModified</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.NestedMethodCall</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.CanAccessThePropertiesOfValue</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.ValueMustHaveCorrectType</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.FromExample("Character(5)")</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.ConstructorCallWithMethodCall</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.SimpleFromMethodCall</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.ParseWithMissingArgument</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.ParseWithInvalidExpressionArguments</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.ParseLocalMethodCall</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.ParseCallWithUnknownMemberCallArgument</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.ParseCallWithTextArgument</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.ParseCallWithArgument</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.MethodNotFound</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.MethodCallMembersMustBeWords</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.FromExampleFailsOnImproperParameters</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.EmptyBracketsAreNotAllowed</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.ArgumentsDoNotMatchMethodParameters</TestName>
      </NamedTestSelector>
      <NamedTestSelector>
        <TestName>Strict.Language.Expressions.Tests.MethodCallTests.FromExample("Range(0, 10).Length")</TestName>
      </NamedTestSelector>
    </IgnoredTests>
  </Settings>
</ProjectConfiguration>